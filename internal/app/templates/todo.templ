package templates

import "fmt"
import "github.com/massanaRoger/todo-go-htmx/db"

templ Todo(todo db.Todo) {
	<span class="flex flex-gap-2">
		<div class="flex gap-2 justify-center items-center w-full" id={ fmt.Sprintf("todo-item-%d", todo.ID) }>
			@checkButton(todo.ID, false)
			@editInput(todo, "list-none relative")
		</div>
	</span>
}

templ AllTodos(todos []db.Todo) { for _, todo := range todos {
	<span class="flex flex-gap-2">
		<div class="flex gap-2 justify-center items-center w-full" id={ fmt.Sprintf("todo-item-%d", todo.ID) }>
			@checkButton(todo.ID, todo.Done)
			@editInput(todo, "list-none relative")
		</div>
	</span>
}

}

templ CheckTodo(todo db.Todo) {
	if todo.Done == false {
		<div id={ fmt.Sprintf("todo-item-%d", todo.ID) } class="flex gap-2 justify-center items-center w-full">
			@checkButton(todo.ID, todo.Done)
			@editInput(todo, "list-none relative")
		</div>
	} else {
		<div id={ fmt.Sprintf("todo-item-%d", todo.ID) } class="flex gap-2 justify-center items-center w-full">
			@checkButton(todo.ID, todo.Done)
			@editInput(todo, "line-through list-none text-gray-500 relative")
		</div>
	}
}

templ StartEditTodo(todo db.Todo) {
	<input
		hx-ext="event-header"
		autofocus
		type="text w-full h-[30px]"
		value={ todo.Title }
		hx-put="/edit-todo"
		onfocus="var temp_value=this.value; this.value=''; this.value=temp_value"
		hx-swap="outerHTML"
		hx-trigger="blur, keyup[keyCode==13]"
		hx-vals={ fmt.Sprintf(`js:{id:%d, newValue:event.target.value,
    prevValue:'%s'}`,todo.ID,todo.Title) }
	/>
}

templ EditTodo(todo db.Todo) {
	if todo.Done == false {
		@editInput(todo, "list-none relative")
	} else {
		@editInput(todo, "line-through relative list-none text-gray-500")
	}
}

templ editInput(todo db.Todo, classes string) {
	<li
		class={ classes + " w-full text-left" }
		hx-vals={ fmt.Sprintf("js:{id: %d}", todo.ID) }
		hx-get="/start-edit-todo"
		hx-trigger="dblclick"
		hx-swap="outerHTML"
	>
		<p class="w-full relative">
			{ todo.Title }
			@deleteButton(todo.ID)
		</p>
	</li>
}

templ deleteButton(id int32) {
	<button
		class="absolute top-0 bottom-0 right-3 text-black"
		hx-post="/remove-todo"
		hx-trigger="click"
		hx-swap="outerHTML"
		hx-target={ fmt.Sprintf("#todo-item-%d", id) }
		hx-vals={ fmt.Sprintf(`js:{id: %d}`, id) }
	>X</button>
}

templ checkButton(id int32, checked bool) {
	<div class="inline-flex items-center">
		<label class="relative flex items-center p-3 rounded-full cursor-pointer w-full" htmlFor="customStyle">
			<input
				type="checkbox"
				class="before:content[''] peer relative h-8 w-8 cursor-pointer appearance-none rounded-full border border-gray-900/20 bg-gray-900/10 transition-all before:absolute before:top-2/4 before:left-2/4 before:block before:h-12 before:w-12 before:-translate-y-2/4 before:-translate-x-2/4 before:rounded-full before:bg-blue-gray-500 before:opacity-0 before:transition-opacity checked:border-gray-900 checked:bg-gray-900 checked:before:bg-gray-900 hover:scale-105 hover:before:opacity-0"
				id={ "checkbox-" + string(id) }
				hx-vals={ fmt.Sprintf("js:{id: %d}", id) }
				hx-target={ fmt.Sprintf("#todo-item-%d", id) }
				hx-post="/check-todo"
				checked?={ checked }
			/>
			<span
				class="absolute text-white transition-opacity opacity-0 pointer-events-none top-2/4 left-2/4 -translate-y-2/4 -translate-x-2/4 peer-checked:opacity-100"
			>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-3.5 w-3.5"
					viewBox="0 0 20 20"
					fill="currentColor"
					stroke="currentColor"
					stroke-width="1"
				>
					<path
						fill-rule="evenodd"
						d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
						clip-rule="evenodd"
					></path>
				</svg>
			</span>
		</label>
	</div>
}
